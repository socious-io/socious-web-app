name: Docker

on:
  push:
    branches: ['main', 'production']
  # pull_request:
  #   branches: ["main"]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@7e0881f8fe90b25e305bbf0309761e9314607e25
        with:
          cosign-release: 'v1.9.0'

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image (dev)
        if: ${{ github.ref != '/refs/heads/production' }}
        id: build-and-push-dev
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          build-args: |
            API_BASE=https://dev.socious.io/api/v2
            GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
            FIREBASE_PUSH_CERT=${{ secrets.FIREBASE_PUSH_CERT }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image (prod)
        if: ${{ github.ref == '/refs/heads/production' }}
        id: build-and-push-prod
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          build-args: |
            API_BASE=https://socious.io/api/v2
            GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
            FIREBASE_PUSH_CERT=${{ secrets.FIREBASE_PUSH_CERT }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-dev:
    needs: build
    name: Deploy to Dev
    if: github.ref == 'refs/heads/main'
    runs-on: ['backend-dev']
    steps:
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Docker run
        run: |
          docker pull ${{ steps.meta.outputs.tags }}
          docker ps -qa --filter "name=socious-web-app" | grep -q . && docker stop socious-web-app && docker rm -fv socious-web-app
          docker run -d --restart always \
            -p 3000:3000 -h socious-web-app --name socious-web-app ${{ steps.meta.outputs.tags }}

  deploy-prod:
    needs: build
    name: Deploy to Production
    if: github.ref == 'refs/heads/production'
    runs-on: ['backend-prod']
    steps:
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Docker run
        run: |
          docker pull ${{ steps.meta.outputs.tags }}
          docker ps -qa --filter "name=socious-web-app" | grep -q . && docker stop socious-web-app && docker rm -fv socious-web-app
          docker run -d --restart always \
            -p 3000:3000 -h socious-web-app --name socious-web-app ${{ steps.meta.outputs.tags }}
